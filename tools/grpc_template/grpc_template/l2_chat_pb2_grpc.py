# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from grpc_template.grpc_template import l2_chat_pb2 as grpc__template_dot_l2__chat__pb2

GRPC_GENERATED_VERSION = '1.73.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower

    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in grpc_template/l2_chat_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class L2Stub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Grpc_Chat = channel.unary_stream(
            '/l2_chat.L2/Grpc_Chat',
            request_serializer=grpc__template_dot_l2__chat__pb2.ChatMessage.SerializeToString,
            response_deserializer=grpc__template_dot_l2__chat__pb2.ChatResponse.FromString,
            _registered_method=True)


class L2Servicer(object):
    """Missing associated documentation comment in .proto file."""

    def Grpc_Chat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_L2Servicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Grpc_Chat': grpc.unary_stream_rpc_method_handler(
            servicer.Grpc_Chat,
            request_deserializer=grpc__template_dot_l2__chat__pb2.ChatMessage.FromString,
            response_serializer=grpc__template_dot_l2__chat__pb2.ChatResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'l2_chat.L2', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('l2_chat.L2', rpc_method_handlers)


# This class is part of an EXPERIMENTAL API.
class L2(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Grpc_Chat(request,
                  target,
                  options=(),
                  channel_credentials=None,
                  call_credentials=None,
                  insecure=False,
                  compression=None,
                  wait_for_ready=None,
                  timeout=None,
                  metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/l2_chat.L2/Grpc_Chat',
            grpc__template_dot_l2__chat__pb2.ChatMessage.SerializeToString,
            grpc__template_dot_l2__chat__pb2.ChatResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
