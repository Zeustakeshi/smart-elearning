/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardDashboardRouteImport } from './routes/dashboard/_dashboard'
import { Route as DashboardDashboardIndexRouteImport } from './routes/dashboard/_dashboard.index'
import { Route as DashboardDashboardToolsRouteImport } from './routes/dashboard/_dashboard.tools'
import { Route as DashboardDashboardDocumentsRouteImport } from './routes/dashboard/_dashboard.documents'
import { Route as DashboardDashboardChatRouteImport } from './routes/dashboard/_dashboard.chat'
import { Route as DashboardDashboardAccountRouteImport } from './routes/dashboard/_dashboard.account'
import { Route as DashboardDashboardClassesDashboardClassesRouteImport } from './routes/dashboard/_dashboard.classes/_dashboard.classes'
import { Route as DashboardDashboardClassesDashboardClassesIndexRouteImport } from './routes/dashboard/_dashboard.classes/_dashboard.classes.index'
import { Route as DashboardDashboardClassesDashboardClassesStudentsRouteImport } from './routes/dashboard/_dashboard.classes/_dashboard.classes.students'

const DashboardRouteImport = createFileRoute('/dashboard')()

const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardDashboardRoute = DashboardDashboardRouteImport.update({
  id: '/_dashboard',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardDashboardIndexRoute = DashboardDashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardDashboardRoute,
} as any)
const DashboardDashboardToolsRoute = DashboardDashboardToolsRouteImport.update({
  id: '/tools',
  path: '/tools',
  getParentRoute: () => DashboardDashboardRoute,
} as any)
const DashboardDashboardDocumentsRoute =
  DashboardDashboardDocumentsRouteImport.update({
    id: '/documents',
    path: '/documents',
    getParentRoute: () => DashboardDashboardRoute,
  } as any)
const DashboardDashboardChatRoute = DashboardDashboardChatRouteImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => DashboardDashboardRoute,
} as any)
const DashboardDashboardAccountRoute =
  DashboardDashboardAccountRouteImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => DashboardDashboardRoute,
  } as any)
const DashboardDashboardClassesDashboardClassesRoute =
  DashboardDashboardClassesDashboardClassesRouteImport.update({
    id: '/classes/_dashboard/classes',
    path: '/classes/classes',
    getParentRoute: () => DashboardDashboardRoute,
  } as any)
const DashboardDashboardClassesDashboardClassesIndexRoute =
  DashboardDashboardClassesDashboardClassesIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DashboardDashboardClassesDashboardClassesRoute,
  } as any)
const DashboardDashboardClassesDashboardClassesStudentsRoute =
  DashboardDashboardClassesDashboardClassesStudentsRouteImport.update({
    id: '/students',
    path: '/students',
    getParentRoute: () => DashboardDashboardClassesDashboardClassesRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/dashboard': typeof DashboardDashboardRouteWithChildren
  '/dashboard/account': typeof DashboardDashboardAccountRoute
  '/dashboard/chat': typeof DashboardDashboardChatRoute
  '/dashboard/documents': typeof DashboardDashboardDocumentsRoute
  '/dashboard/tools': typeof DashboardDashboardToolsRoute
  '/dashboard/': typeof DashboardDashboardIndexRoute
  '/dashboard/classes/classes': typeof DashboardDashboardClassesDashboardClassesRouteWithChildren
  '/dashboard/classes/classes/students': typeof DashboardDashboardClassesDashboardClassesStudentsRoute
  '/dashboard/classes/classes/': typeof DashboardDashboardClassesDashboardClassesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/dashboard': typeof DashboardDashboardIndexRoute
  '/dashboard/account': typeof DashboardDashboardAccountRoute
  '/dashboard/chat': typeof DashboardDashboardChatRoute
  '/dashboard/documents': typeof DashboardDashboardDocumentsRoute
  '/dashboard/tools': typeof DashboardDashboardToolsRoute
  '/dashboard/classes/classes/students': typeof DashboardDashboardClassesDashboardClassesStudentsRoute
  '/dashboard/classes/classes': typeof DashboardDashboardClassesDashboardClassesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/dashboard/_dashboard': typeof DashboardDashboardRouteWithChildren
  '/dashboard/_dashboard/account': typeof DashboardDashboardAccountRoute
  '/dashboard/_dashboard/chat': typeof DashboardDashboardChatRoute
  '/dashboard/_dashboard/documents': typeof DashboardDashboardDocumentsRoute
  '/dashboard/_dashboard/tools': typeof DashboardDashboardToolsRoute
  '/dashboard/_dashboard/': typeof DashboardDashboardIndexRoute
  '/dashboard/_dashboard/classes/_dashboard/classes': typeof DashboardDashboardClassesDashboardClassesRouteWithChildren
  '/dashboard/_dashboard/classes/_dashboard/classes/students': typeof DashboardDashboardClassesDashboardClassesStudentsRoute
  '/dashboard/_dashboard/classes/_dashboard/classes/': typeof DashboardDashboardClassesDashboardClassesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/dashboard'
    | '/dashboard/account'
    | '/dashboard/chat'
    | '/dashboard/documents'
    | '/dashboard/tools'
    | '/dashboard/'
    | '/dashboard/classes/classes'
    | '/dashboard/classes/classes/students'
    | '/dashboard/classes/classes/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/dashboard'
    | '/dashboard/account'
    | '/dashboard/chat'
    | '/dashboard/documents'
    | '/dashboard/tools'
    | '/dashboard/classes/classes/students'
    | '/dashboard/classes/classes'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/dashboard'
    | '/dashboard/_dashboard'
    | '/dashboard/_dashboard/account'
    | '/dashboard/_dashboard/chat'
    | '/dashboard/_dashboard/documents'
    | '/dashboard/_dashboard/tools'
    | '/dashboard/_dashboard/'
    | '/dashboard/_dashboard/classes/_dashboard/classes'
    | '/dashboard/_dashboard/classes/_dashboard/classes/students'
    | '/dashboard/_dashboard/classes/_dashboard/classes/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  DashboardRoute: typeof DashboardRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/_dashboard': {
      id: '/dashboard/_dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardDashboardRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/_dashboard/': {
      id: '/dashboard/_dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardDashboardIndexRouteImport
      parentRoute: typeof DashboardDashboardRoute
    }
    '/dashboard/_dashboard/tools': {
      id: '/dashboard/_dashboard/tools'
      path: '/tools'
      fullPath: '/dashboard/tools'
      preLoaderRoute: typeof DashboardDashboardToolsRouteImport
      parentRoute: typeof DashboardDashboardRoute
    }
    '/dashboard/_dashboard/documents': {
      id: '/dashboard/_dashboard/documents'
      path: '/documents'
      fullPath: '/dashboard/documents'
      preLoaderRoute: typeof DashboardDashboardDocumentsRouteImport
      parentRoute: typeof DashboardDashboardRoute
    }
    '/dashboard/_dashboard/chat': {
      id: '/dashboard/_dashboard/chat'
      path: '/chat'
      fullPath: '/dashboard/chat'
      preLoaderRoute: typeof DashboardDashboardChatRouteImport
      parentRoute: typeof DashboardDashboardRoute
    }
    '/dashboard/_dashboard/account': {
      id: '/dashboard/_dashboard/account'
      path: '/account'
      fullPath: '/dashboard/account'
      preLoaderRoute: typeof DashboardDashboardAccountRouteImport
      parentRoute: typeof DashboardDashboardRoute
    }
    '/dashboard/_dashboard/classes/_dashboard/classes': {
      id: '/dashboard/_dashboard/classes/_dashboard/classes'
      path: '/classes/classes'
      fullPath: '/dashboard/classes/classes'
      preLoaderRoute: typeof DashboardDashboardClassesDashboardClassesRouteImport
      parentRoute: typeof DashboardDashboardRoute
    }
    '/dashboard/_dashboard/classes/_dashboard/classes/': {
      id: '/dashboard/_dashboard/classes/_dashboard/classes/'
      path: '/'
      fullPath: '/dashboard/classes/classes/'
      preLoaderRoute: typeof DashboardDashboardClassesDashboardClassesIndexRouteImport
      parentRoute: typeof DashboardDashboardClassesDashboardClassesRoute
    }
    '/dashboard/_dashboard/classes/_dashboard/classes/students': {
      id: '/dashboard/_dashboard/classes/_dashboard/classes/students'
      path: '/students'
      fullPath: '/dashboard/classes/classes/students'
      preLoaderRoute: typeof DashboardDashboardClassesDashboardClassesStudentsRouteImport
      parentRoute: typeof DashboardDashboardClassesDashboardClassesRoute
    }
  }
}

interface DashboardDashboardClassesDashboardClassesRouteChildren {
  DashboardDashboardClassesDashboardClassesStudentsRoute: typeof DashboardDashboardClassesDashboardClassesStudentsRoute
  DashboardDashboardClassesDashboardClassesIndexRoute: typeof DashboardDashboardClassesDashboardClassesIndexRoute
}

const DashboardDashboardClassesDashboardClassesRouteChildren: DashboardDashboardClassesDashboardClassesRouteChildren =
  {
    DashboardDashboardClassesDashboardClassesStudentsRoute:
      DashboardDashboardClassesDashboardClassesStudentsRoute,
    DashboardDashboardClassesDashboardClassesIndexRoute:
      DashboardDashboardClassesDashboardClassesIndexRoute,
  }

const DashboardDashboardClassesDashboardClassesRouteWithChildren =
  DashboardDashboardClassesDashboardClassesRoute._addFileChildren(
    DashboardDashboardClassesDashboardClassesRouteChildren,
  )

interface DashboardDashboardRouteChildren {
  DashboardDashboardAccountRoute: typeof DashboardDashboardAccountRoute
  DashboardDashboardChatRoute: typeof DashboardDashboardChatRoute
  DashboardDashboardDocumentsRoute: typeof DashboardDashboardDocumentsRoute
  DashboardDashboardToolsRoute: typeof DashboardDashboardToolsRoute
  DashboardDashboardIndexRoute: typeof DashboardDashboardIndexRoute
  DashboardDashboardClassesDashboardClassesRoute: typeof DashboardDashboardClassesDashboardClassesRouteWithChildren
}

const DashboardDashboardRouteChildren: DashboardDashboardRouteChildren = {
  DashboardDashboardAccountRoute: DashboardDashboardAccountRoute,
  DashboardDashboardChatRoute: DashboardDashboardChatRoute,
  DashboardDashboardDocumentsRoute: DashboardDashboardDocumentsRoute,
  DashboardDashboardToolsRoute: DashboardDashboardToolsRoute,
  DashboardDashboardIndexRoute: DashboardDashboardIndexRoute,
  DashboardDashboardClassesDashboardClassesRoute:
    DashboardDashboardClassesDashboardClassesRouteWithChildren,
}

const DashboardDashboardRouteWithChildren =
  DashboardDashboardRoute._addFileChildren(DashboardDashboardRouteChildren)

interface DashboardRouteChildren {
  DashboardDashboardRoute: typeof DashboardDashboardRouteWithChildren
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardDashboardRoute: DashboardDashboardRouteWithChildren,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  DashboardRoute: DashboardRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
