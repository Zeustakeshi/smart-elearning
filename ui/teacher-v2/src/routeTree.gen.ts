/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WelcomeRouteImport } from './routes/welcome'
import { Route as AuthRouteRouteImport } from './routes/auth/route'
import { Route as appRouteRouteImport } from './routes/(app)/route'
import { Route as AuthRegisterRouteImport } from './routes/auth/register'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as appToolsIndexRouteImport } from './routes/(app)/tools/index'
import { Route as appTeacherAssistantIndexRouteImport } from './routes/(app)/teacher-assistant/index'
import { Route as appSettingsIndexRouteImport } from './routes/(app)/settings/index'
import { Route as appDocumentsIndexRouteImport } from './routes/(app)/documents/index'
import { Route as appCoursesIndexRouteImport } from './routes/(app)/courses/index'
import { Route as appdashboardIndexRouteImport } from './routes/(app)/(dashboard)/index'
import { Route as appCoursesNewRouteImport } from './routes/(app)/courses/new'
import { Route as appCoursesIdRouteRouteImport } from './routes/(app)/courses/$id/route'
import { Route as appToolsMultipleChoiceQuizIndexRouteImport } from './routes/(app)/tools/multiple-choice-quiz/index'
import { Route as appToolsLessonSummaryIndexRouteImport } from './routes/(app)/tools/lesson-summary/index'
import { Route as appToolsLessonPlanIndexRouteImport } from './routes/(app)/tools/lesson-plan/index'
import { Route as appToolsDiscussionQuestionIndexRouteImport } from './routes/(app)/tools/discussion-question/index'
import { Route as appLessonsIdVideoIndexRouteImport } from './routes/(app)/lessons/$id/video/index'
import { Route as appLessonsIdQuizIndexRouteImport } from './routes/(app)/lessons/$id/quiz/index'
import { Route as appLessonsIdDocumentsIndexRouteImport } from './routes/(app)/lessons/$id/documents/index'
import { Route as appCoursesIdLessonsIndexRouteImport } from './routes/(app)/courses/$id/lessons/index'
import { Route as appCoursesIdDocumentsIndexRouteImport } from './routes/(app)/courses/$id/documents/index'

const WelcomeRoute = WelcomeRouteImport.update({
  id: '/welcome',
  path: '/welcome',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const appRouteRoute = appRouteRouteImport.update({
  id: '/(app)',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)
const appToolsIndexRoute = appToolsIndexRouteImport.update({
  id: '/tools/',
  path: '/tools/',
  getParentRoute: () => appRouteRoute,
} as any)
const appTeacherAssistantIndexRoute =
  appTeacherAssistantIndexRouteImport.update({
    id: '/teacher-assistant/',
    path: '/teacher-assistant/',
    getParentRoute: () => appRouteRoute,
  } as any)
const appSettingsIndexRoute = appSettingsIndexRouteImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => appRouteRoute,
} as any)
const appDocumentsIndexRoute = appDocumentsIndexRouteImport.update({
  id: '/documents/',
  path: '/documents/',
  getParentRoute: () => appRouteRoute,
} as any)
const appCoursesIndexRoute = appCoursesIndexRouteImport.update({
  id: '/courses/',
  path: '/courses/',
  getParentRoute: () => appRouteRoute,
} as any)
const appdashboardIndexRoute = appdashboardIndexRouteImport.update({
  id: '/(dashboard)/',
  path: '/',
  getParentRoute: () => appRouteRoute,
} as any)
const appCoursesNewRoute = appCoursesNewRouteImport.update({
  id: '/courses/new',
  path: '/courses/new',
  getParentRoute: () => appRouteRoute,
} as any)
const appCoursesIdRouteRoute = appCoursesIdRouteRouteImport.update({
  id: '/courses/$id',
  path: '/courses/$id',
  getParentRoute: () => appRouteRoute,
} as any)
const appToolsMultipleChoiceQuizIndexRoute =
  appToolsMultipleChoiceQuizIndexRouteImport.update({
    id: '/tools/multiple-choice-quiz/',
    path: '/tools/multiple-choice-quiz/',
    getParentRoute: () => appRouteRoute,
  } as any)
const appToolsLessonSummaryIndexRoute =
  appToolsLessonSummaryIndexRouteImport.update({
    id: '/tools/lesson-summary/',
    path: '/tools/lesson-summary/',
    getParentRoute: () => appRouteRoute,
  } as any)
const appToolsLessonPlanIndexRoute = appToolsLessonPlanIndexRouteImport.update({
  id: '/tools/lesson-plan/',
  path: '/tools/lesson-plan/',
  getParentRoute: () => appRouteRoute,
} as any)
const appToolsDiscussionQuestionIndexRoute =
  appToolsDiscussionQuestionIndexRouteImport.update({
    id: '/tools/discussion-question/',
    path: '/tools/discussion-question/',
    getParentRoute: () => appRouteRoute,
  } as any)
const appLessonsIdVideoIndexRoute = appLessonsIdVideoIndexRouteImport.update({
  id: '/lessons/$id/video/',
  path: '/lessons/$id/video/',
  getParentRoute: () => appRouteRoute,
} as any)
const appLessonsIdQuizIndexRoute = appLessonsIdQuizIndexRouteImport.update({
  id: '/lessons/$id/quiz/',
  path: '/lessons/$id/quiz/',
  getParentRoute: () => appRouteRoute,
} as any)
const appLessonsIdDocumentsIndexRoute =
  appLessonsIdDocumentsIndexRouteImport.update({
    id: '/lessons/$id/documents/',
    path: '/lessons/$id/documents/',
    getParentRoute: () => appRouteRoute,
  } as any)
const appCoursesIdLessonsIndexRoute =
  appCoursesIdLessonsIndexRouteImport.update({
    id: '/lessons/',
    path: '/lessons/',
    getParentRoute: () => appCoursesIdRouteRoute,
  } as any)
const appCoursesIdDocumentsIndexRoute =
  appCoursesIdDocumentsIndexRouteImport.update({
    id: '/documents/',
    path: '/documents/',
    getParentRoute: () => appCoursesIdRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof appdashboardIndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/welcome': typeof WelcomeRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/courses/$id': typeof appCoursesIdRouteRouteWithChildren
  '/courses/new': typeof appCoursesNewRoute
  '/courses': typeof appCoursesIndexRoute
  '/documents': typeof appDocumentsIndexRoute
  '/settings': typeof appSettingsIndexRoute
  '/teacher-assistant': typeof appTeacherAssistantIndexRoute
  '/tools': typeof appToolsIndexRoute
  '/tools/discussion-question': typeof appToolsDiscussionQuestionIndexRoute
  '/tools/lesson-plan': typeof appToolsLessonPlanIndexRoute
  '/tools/lesson-summary': typeof appToolsLessonSummaryIndexRoute
  '/tools/multiple-choice-quiz': typeof appToolsMultipleChoiceQuizIndexRoute
  '/courses/$id/documents': typeof appCoursesIdDocumentsIndexRoute
  '/courses/$id/lessons': typeof appCoursesIdLessonsIndexRoute
  '/lessons/$id/documents': typeof appLessonsIdDocumentsIndexRoute
  '/lessons/$id/quiz': typeof appLessonsIdQuizIndexRoute
  '/lessons/$id/video': typeof appLessonsIdVideoIndexRoute
}
export interface FileRoutesByTo {
  '/auth': typeof AuthRouteRouteWithChildren
  '/welcome': typeof WelcomeRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/courses/$id': typeof appCoursesIdRouteRouteWithChildren
  '/courses/new': typeof appCoursesNewRoute
  '/': typeof appdashboardIndexRoute
  '/courses': typeof appCoursesIndexRoute
  '/documents': typeof appDocumentsIndexRoute
  '/settings': typeof appSettingsIndexRoute
  '/teacher-assistant': typeof appTeacherAssistantIndexRoute
  '/tools': typeof appToolsIndexRoute
  '/tools/discussion-question': typeof appToolsDiscussionQuestionIndexRoute
  '/tools/lesson-plan': typeof appToolsLessonPlanIndexRoute
  '/tools/lesson-summary': typeof appToolsLessonSummaryIndexRoute
  '/tools/multiple-choice-quiz': typeof appToolsMultipleChoiceQuizIndexRoute
  '/courses/$id/documents': typeof appCoursesIdDocumentsIndexRoute
  '/courses/$id/lessons': typeof appCoursesIdLessonsIndexRoute
  '/lessons/$id/documents': typeof appLessonsIdDocumentsIndexRoute
  '/lessons/$id/quiz': typeof appLessonsIdQuizIndexRoute
  '/lessons/$id/video': typeof appLessonsIdVideoIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(app)': typeof appRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/welcome': typeof WelcomeRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/(app)/courses/$id': typeof appCoursesIdRouteRouteWithChildren
  '/(app)/courses/new': typeof appCoursesNewRoute
  '/(app)/(dashboard)/': typeof appdashboardIndexRoute
  '/(app)/courses/': typeof appCoursesIndexRoute
  '/(app)/documents/': typeof appDocumentsIndexRoute
  '/(app)/settings/': typeof appSettingsIndexRoute
  '/(app)/teacher-assistant/': typeof appTeacherAssistantIndexRoute
  '/(app)/tools/': typeof appToolsIndexRoute
  '/(app)/tools/discussion-question/': typeof appToolsDiscussionQuestionIndexRoute
  '/(app)/tools/lesson-plan/': typeof appToolsLessonPlanIndexRoute
  '/(app)/tools/lesson-summary/': typeof appToolsLessonSummaryIndexRoute
  '/(app)/tools/multiple-choice-quiz/': typeof appToolsMultipleChoiceQuizIndexRoute
  '/(app)/courses/$id/documents/': typeof appCoursesIdDocumentsIndexRoute
  '/(app)/courses/$id/lessons/': typeof appCoursesIdLessonsIndexRoute
  '/(app)/lessons/$id/documents/': typeof appLessonsIdDocumentsIndexRoute
  '/(app)/lessons/$id/quiz/': typeof appLessonsIdQuizIndexRoute
  '/(app)/lessons/$id/video/': typeof appLessonsIdVideoIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/welcome'
    | '/auth/login'
    | '/auth/register'
    | '/courses/$id'
    | '/courses/new'
    | '/courses'
    | '/documents'
    | '/settings'
    | '/teacher-assistant'
    | '/tools'
    | '/tools/discussion-question'
    | '/tools/lesson-plan'
    | '/tools/lesson-summary'
    | '/tools/multiple-choice-quiz'
    | '/courses/$id/documents'
    | '/courses/$id/lessons'
    | '/lessons/$id/documents'
    | '/lessons/$id/quiz'
    | '/lessons/$id/video'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/welcome'
    | '/auth/login'
    | '/auth/register'
    | '/courses/$id'
    | '/courses/new'
    | '/'
    | '/courses'
    | '/documents'
    | '/settings'
    | '/teacher-assistant'
    | '/tools'
    | '/tools/discussion-question'
    | '/tools/lesson-plan'
    | '/tools/lesson-summary'
    | '/tools/multiple-choice-quiz'
    | '/courses/$id/documents'
    | '/courses/$id/lessons'
    | '/lessons/$id/documents'
    | '/lessons/$id/quiz'
    | '/lessons/$id/video'
  id:
    | '__root__'
    | '/(app)'
    | '/auth'
    | '/welcome'
    | '/auth/login'
    | '/auth/register'
    | '/(app)/courses/$id'
    | '/(app)/courses/new'
    | '/(app)/(dashboard)/'
    | '/(app)/courses/'
    | '/(app)/documents/'
    | '/(app)/settings/'
    | '/(app)/teacher-assistant/'
    | '/(app)/tools/'
    | '/(app)/tools/discussion-question/'
    | '/(app)/tools/lesson-plan/'
    | '/(app)/tools/lesson-summary/'
    | '/(app)/tools/multiple-choice-quiz/'
    | '/(app)/courses/$id/documents/'
    | '/(app)/courses/$id/lessons/'
    | '/(app)/lessons/$id/documents/'
    | '/(app)/lessons/$id/quiz/'
    | '/(app)/lessons/$id/video/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  appRouteRoute: typeof appRouteRouteWithChildren
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  WelcomeRoute: typeof WelcomeRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/welcome': {
      id: '/welcome'
      path: '/welcome'
      fullPath: '/welcome'
      preLoaderRoute: typeof WelcomeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)': {
      id: '/(app)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/(app)/tools/': {
      id: '/(app)/tools/'
      path: '/tools'
      fullPath: '/tools'
      preLoaderRoute: typeof appToolsIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/teacher-assistant/': {
      id: '/(app)/teacher-assistant/'
      path: '/teacher-assistant'
      fullPath: '/teacher-assistant'
      preLoaderRoute: typeof appTeacherAssistantIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/settings/': {
      id: '/(app)/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof appSettingsIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/documents/': {
      id: '/(app)/documents/'
      path: '/documents'
      fullPath: '/documents'
      preLoaderRoute: typeof appDocumentsIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/courses/': {
      id: '/(app)/courses/'
      path: '/courses'
      fullPath: '/courses'
      preLoaderRoute: typeof appCoursesIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/(dashboard)/': {
      id: '/(app)/(dashboard)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appdashboardIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/courses/new': {
      id: '/(app)/courses/new'
      path: '/courses/new'
      fullPath: '/courses/new'
      preLoaderRoute: typeof appCoursesNewRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/courses/$id': {
      id: '/(app)/courses/$id'
      path: '/courses/$id'
      fullPath: '/courses/$id'
      preLoaderRoute: typeof appCoursesIdRouteRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/tools/multiple-choice-quiz/': {
      id: '/(app)/tools/multiple-choice-quiz/'
      path: '/tools/multiple-choice-quiz'
      fullPath: '/tools/multiple-choice-quiz'
      preLoaderRoute: typeof appToolsMultipleChoiceQuizIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/tools/lesson-summary/': {
      id: '/(app)/tools/lesson-summary/'
      path: '/tools/lesson-summary'
      fullPath: '/tools/lesson-summary'
      preLoaderRoute: typeof appToolsLessonSummaryIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/tools/lesson-plan/': {
      id: '/(app)/tools/lesson-plan/'
      path: '/tools/lesson-plan'
      fullPath: '/tools/lesson-plan'
      preLoaderRoute: typeof appToolsLessonPlanIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/tools/discussion-question/': {
      id: '/(app)/tools/discussion-question/'
      path: '/tools/discussion-question'
      fullPath: '/tools/discussion-question'
      preLoaderRoute: typeof appToolsDiscussionQuestionIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/lessons/$id/video/': {
      id: '/(app)/lessons/$id/video/'
      path: '/lessons/$id/video'
      fullPath: '/lessons/$id/video'
      preLoaderRoute: typeof appLessonsIdVideoIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/lessons/$id/quiz/': {
      id: '/(app)/lessons/$id/quiz/'
      path: '/lessons/$id/quiz'
      fullPath: '/lessons/$id/quiz'
      preLoaderRoute: typeof appLessonsIdQuizIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/lessons/$id/documents/': {
      id: '/(app)/lessons/$id/documents/'
      path: '/lessons/$id/documents'
      fullPath: '/lessons/$id/documents'
      preLoaderRoute: typeof appLessonsIdDocumentsIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/courses/$id/lessons/': {
      id: '/(app)/courses/$id/lessons/'
      path: '/lessons'
      fullPath: '/courses/$id/lessons'
      preLoaderRoute: typeof appCoursesIdLessonsIndexRouteImport
      parentRoute: typeof appCoursesIdRouteRoute
    }
    '/(app)/courses/$id/documents/': {
      id: '/(app)/courses/$id/documents/'
      path: '/documents'
      fullPath: '/courses/$id/documents'
      preLoaderRoute: typeof appCoursesIdDocumentsIndexRouteImport
      parentRoute: typeof appCoursesIdRouteRoute
    }
  }
}

interface appCoursesIdRouteRouteChildren {
  appCoursesIdDocumentsIndexRoute: typeof appCoursesIdDocumentsIndexRoute
  appCoursesIdLessonsIndexRoute: typeof appCoursesIdLessonsIndexRoute
}

const appCoursesIdRouteRouteChildren: appCoursesIdRouteRouteChildren = {
  appCoursesIdDocumentsIndexRoute: appCoursesIdDocumentsIndexRoute,
  appCoursesIdLessonsIndexRoute: appCoursesIdLessonsIndexRoute,
}

const appCoursesIdRouteRouteWithChildren =
  appCoursesIdRouteRoute._addFileChildren(appCoursesIdRouteRouteChildren)

interface appRouteRouteChildren {
  appCoursesIdRouteRoute: typeof appCoursesIdRouteRouteWithChildren
  appCoursesNewRoute: typeof appCoursesNewRoute
  appdashboardIndexRoute: typeof appdashboardIndexRoute
  appCoursesIndexRoute: typeof appCoursesIndexRoute
  appDocumentsIndexRoute: typeof appDocumentsIndexRoute
  appSettingsIndexRoute: typeof appSettingsIndexRoute
  appTeacherAssistantIndexRoute: typeof appTeacherAssistantIndexRoute
  appToolsIndexRoute: typeof appToolsIndexRoute
  appToolsDiscussionQuestionIndexRoute: typeof appToolsDiscussionQuestionIndexRoute
  appToolsLessonPlanIndexRoute: typeof appToolsLessonPlanIndexRoute
  appToolsLessonSummaryIndexRoute: typeof appToolsLessonSummaryIndexRoute
  appToolsMultipleChoiceQuizIndexRoute: typeof appToolsMultipleChoiceQuizIndexRoute
  appLessonsIdDocumentsIndexRoute: typeof appLessonsIdDocumentsIndexRoute
  appLessonsIdQuizIndexRoute: typeof appLessonsIdQuizIndexRoute
  appLessonsIdVideoIndexRoute: typeof appLessonsIdVideoIndexRoute
}

const appRouteRouteChildren: appRouteRouteChildren = {
  appCoursesIdRouteRoute: appCoursesIdRouteRouteWithChildren,
  appCoursesNewRoute: appCoursesNewRoute,
  appdashboardIndexRoute: appdashboardIndexRoute,
  appCoursesIndexRoute: appCoursesIndexRoute,
  appDocumentsIndexRoute: appDocumentsIndexRoute,
  appSettingsIndexRoute: appSettingsIndexRoute,
  appTeacherAssistantIndexRoute: appTeacherAssistantIndexRoute,
  appToolsIndexRoute: appToolsIndexRoute,
  appToolsDiscussionQuestionIndexRoute: appToolsDiscussionQuestionIndexRoute,
  appToolsLessonPlanIndexRoute: appToolsLessonPlanIndexRoute,
  appToolsLessonSummaryIndexRoute: appToolsLessonSummaryIndexRoute,
  appToolsMultipleChoiceQuizIndexRoute: appToolsMultipleChoiceQuizIndexRoute,
  appLessonsIdDocumentsIndexRoute: appLessonsIdDocumentsIndexRoute,
  appLessonsIdQuizIndexRoute: appLessonsIdQuizIndexRoute,
  appLessonsIdVideoIndexRoute: appLessonsIdVideoIndexRoute,
}

const appRouteRouteWithChildren = appRouteRoute._addFileChildren(
  appRouteRouteChildren,
)

interface AuthRouteRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  appRouteRoute: appRouteRouteWithChildren,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  WelcomeRoute: WelcomeRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
